{
	"info": {
		"_postman_id": "a275e970-c60a-43ad-aa64-bb4c97fff216",
		"name": "Final project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20059604"
	},
	"item": [
		{
			"name": "Get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//check request was sent\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//get response body\r",
							"const response_body = pm.response.json();\r",
							"console.log(response_body.access_token);\r",
							"\r",
							"//set bearer_token variable with value fron response\r",
							"pm.environment.set(\"bearer_token\", `${response_body.access_token}`);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"client_id\": \"RazvanO\",\r\n    \"client_secret\": \"231087\",\r\n    \"grant_type\": \"client_credentials\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/index.php/oauth/issueToken",
					"host": [
						"{{url}}"
					],
					"path": [
						"index.php",
						"oauth",
						"issueToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET work experience when no entries are registered",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Employee Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD employee work experience",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//get response body\r",
							"const response_body = pm.response.json();\r",
							"console.log(response_body.seqId);\r",
							"\r",
							"//set seqId variable with value fron response\r",
							"pm.environment.set(\"seqId\", `${response_body.seqId}`);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"company\": \"Company 011\",\r\n    \"title\": \"QA Tester\",\r\n    \"fromDate\": \"2022-04-01\",\r\n    \"toDate\": \"2024-12-24\",\r\n    \"comment\": \"work experience current work\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET work experience when at least one entry registered",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD employee work experience when employee id not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404. employee id not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"\",\r\n    \"company\": \"Company 011\",\r\n    \"title\": \"QA Tester\",\r\n    \"fromDate\": \"2022-04-01\",\r\n    \"toDate\": \"2024-12-24\",\r\n    \"comment\": \"work experience current work\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD employee work experience when mandatory fields are missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Company must not be empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"company must not be empty\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"7\",\r\n    \"company\": \"\",\r\n    \"title\": \"\",\r\n    \"fromDate\": \"2022-04-01\",\r\n    \"toDate\": \"2024-12-24\",\r\n    \"comment\": \"work experience current work\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EDIT employee work experience",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Work experience successfully Updated\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Successfully Updated\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"seqId\": {{seqId}},\r\n    \"company\": \"Company 011\",\r\n    \"title\": \"QA Tester\",\r\n    \"fromDate\": \"2022-04-01\",\r\n    \"toDate\": \"2024-12-24\",\r\n    \"comment\": \"work experience current work\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EDIT employee work experience when user Id not existing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404, user was not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Employee Not Found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Employee Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"a885478\",\r\n    \"seqId\": {{seqId}},\r\n    \"company\": \"Company 011\",\r\n    \"title\": \"QA Tester\",\r\n    \"fromDate\": \"2022-04-01\",\r\n    \"toDate\": \"2024-12-24\",\r\n    \"comment\": \"work experience current work\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EDIT employee work experience when record not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404, user was not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Work Experience Record Not Found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Work Experience Record Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"seqId\": \"aade\",\r\n    \"company\": \"Company 011\",\r\n    \"title\": \"QA Tester\",\r\n    \"fromDate\": \"2022-04-01\",\r\n    \"toDate\": \"2024-12-24\",\r\n    \"comment\": \"work experience current work\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE employee work experience",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successfully Deleted\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Successfully Deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"seqId\":{{seqId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE employee work experience when user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Employee Not Found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Employee Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"\",\r\n    \"seqId\":{{seqId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE employee work experience when record not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Work Experience Record Not Found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Work Experience Record Not Found\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"seqId\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/work-experience",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"work-experience"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET education when no entries are registered",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Employee Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD employee education",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//get response body\r",
							"const response_body = pm.response.json();\r",
							"console.log(response_body.seqId);\r",
							"\r",
							"//set seqId variable with value fron response\r",
							"pm.environment.set(\"seqId\", `${response_body.seqId}`);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"level\":3,\r\n    \"institute\": \"Lucian Blaga\",\r\n    \"startDate\": \"2007-10-03\",\r\n    \"endDate\": \"2009-07-02\",\r\n    \"specialization\": \"Economics\",\r\n    \"gpa\": \"7.8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET education when at least one entry registered",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD employee education when employee id not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404. employee id not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 89655,\r\n    \"level\":1,\r\n    \"institute\": \"Transilvania\",\r\n    \"startDate\": \"2011-10-02\",\r\n    \"endDate\": \"2016-06-24\",\r\n    \"specialization\": \"Engeneering\",\r\n    \"gpa\": \"8.5\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD employee education when level education missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Employee Education Level Not Found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Employee Education Level Not Found\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"level\":null,\r\n    \"institute\": \"Transilvania\",\r\n    \"startDate\": \"2011-10-02\",\r\n    \"endDate\": \"2016-06-24\",\r\n    \"specialization\": \"Engeneering\",\r\n    \"gpa\": \"8.5\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD employee education when level education is a string",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bad request, level field should not be string\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"level\":\"High School Diploma\",\r\n    \"institute\": \"Lucian Blaga\",\r\n    \"startDate\": \"2007-10-03\",\r\n    \"endDate\": \"2011-07-02\",\r\n    \"specialization\": \"Math\",\r\n    \"gpa\": \"7.8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE employee education",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successfully Deleted\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Successfully Deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"seqId\":{{seqId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE employee education when user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Employee Not Found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Employee Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 879895656,\r\n    \"seqId\":{{seqId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE employee education when record not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Employee Education Record Not Found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Employee Education Record Not Found\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 7,\r\n    \"seqId\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/employee/:id/education",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						":id",
						"education"
					],
					"variable": [
						{
							"key": "id",
							"value": "7"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bearer_token",
			"value": ""
		}
	]
}